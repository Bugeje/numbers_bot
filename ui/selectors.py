from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import ContextTypes

from ui import build_year_keyboard

SELECT_YEAR, SELECT_MONTH = range(2)


async def ask_year(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìÜ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥:", reply_markup=build_year_keyboard())
    return SELECT_YEAR


async def ask_month(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    if not query:
        await update.message.reply_text("‚ùóÔ∏è–û–∂–∏–¥–∞–ª–∞—Å—å –∫–Ω–æ–ø–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥.")
        return SELECT_MONTH

    await query.answer()

    if query.data.startswith("cal_year_"):
        selected_year = int(query.data.replace("cal_year_", ""))
    else:
        await query.message.reply_text("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≥–æ–¥–∞.")
        return SELECT_MONTH

    context.user_data["selected_year"] = selected_year

    keyboard = [
        [InlineKeyboardButton(str(i + 1), callback_data=str(i + 1))] for i in range(12)
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.message.reply_text("üìÖ –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü:", reply_markup=reply_markup)
    return SELECT_MONTH


# –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è ¬´–ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–Ω–µ–π¬ª
ASK_DAYS_YEAR_PROMPT = "üìÖ –í–≤–µ–¥–∏—Ç–µ *–≥–æ–¥* (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025)."
ASK_DAYS_MONTH_PROMPT = (
    "üóì –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ *–º–µ—Å—è—Ü* —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 12 (–Ω–∞–ø—Ä–∏–º–µ—Ä, 8).\n"
    "–ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ —Å–ª–æ–≤–∞–º–∏: —è–Ω–≤–∞—Ä—å, —Ñ–µ–≤—Ä–∞–ª—å, ... (—Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ –≤–∞–∂–µ–Ω)."
)
ASK_DAYS_MONTHYEAR_PROMPT = (
    "üìÖ –í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü –∏ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ *MM.YYYY* ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, 08.2025\n"
    "–¢–∞–∫–∂–µ –ø–æ–¥–æ–π–¥—ë—Ç: 8.2025, 2025-08, 2025/8"
)
