
from telegram import KeyboardButton, ReplyKeyboardMarkup, Update
from telegram.ext import ContextTypes

from utils import parse_and_normalize

from .core_profile import show_core_profile
from .states import State

START_KEYBOARD = ReplyKeyboardMarkup(
    [[KeyboardButton("üîÅ –°—Ç–∞—Ä—Ç")]], resize_keyboard=True, one_time_keyboard=True
)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Start the bot conversation and ask for name."""
    context.user_data.clear()
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–≤–æ—ë —è–¥—Ä–æ –ª–∏—á–Ω–æ—Å—Ç–∏ –ø–æ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏–∏.\n\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç (–§–∞–º–∏–ª–∏—è, –ò–º—è, –û—Ç—á–µ—Å—Ç–≤–æ)?",
        reply_markup=START_KEYBOARD,
    )
    return State.ASK_NAME


async def save_name_and_ask_birthdate(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Save user name and ask for birthdate."""
    context.user_data["name"] = update.message.text.strip()
    await update.message.reply_text(
        "üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä 24.02.1993)."
        "–ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ 1993-02-24 –∏–ª–∏ 24/02/1993."
    )
    return State.ASK_BIRTHDATE


async def receive_birthdate_text(
    update: Update, context: ContextTypes.DEFAULT_TYPE
) -> int | object:
    """Receive and validate birthdate text."""
    try:
        date_str = (update.message.text or "").strip()
        normalized = parse_and_normalize(date_str)
        context.user_data["birthdate"] = normalized
        # –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π –ø–æ–∫–∞–∑–∞ –ø—Ä–æ—Ñ–∏–ª—è
        return await show_core_profile(update, context)
    except Exception as e:
        await update.message.reply_text(
            f"‚ùå {e}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑. " "–ü—Ä–∏–º–µ—Ä—ã: 24.02.1993, 1993-02-24, 24/02/1993."
        )
        return State.ASK_BIRTHDATE
