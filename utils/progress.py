# utils/progress.py
import asyncio
from typing import Iterable, Optional
from telegram.constants import ChatAction
from telegram import Update, Message, Chat


PRESETS = {
    # –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Ç—É–ø–µ–Ω–∏ ¬´–ø—Ä–æ–≥—Ä–µ—Å—Å–∞¬ª
    "calc_core": [
        "‚öôÔ∏è –°—á–∏—Ç–∞—é —è–¥—Ä–æ –ª–∏—á–Ω–æ—Å—Ç–∏‚Ä¶",
        "‚öôÔ∏è –°—á–∏—Ç–∞—é —è–¥—Ä–æ –ª–∏—á–Ω–æ—Å—Ç–∏‚Ä¶ ‚è≥ [‚ñë‚ñë‚ñë‚ñë‚ñë]",
        "‚öôÔ∏è –°—á–∏—Ç–∞—é —è–¥—Ä–æ –ª–∏—á–Ω–æ—Å—Ç–∏‚Ä¶ ‚è≥ [‚ñà‚ñë‚ñë‚ñë‚ñë]",
        "‚öôÔ∏è –°—á–∏—Ç–∞—é —è–¥—Ä–æ –ª–∏—á–Ω–æ—Å—Ç–∏‚Ä¶ ‚è≥ [‚ñà‚ñà‚ñë‚ñë‚ñë]",
        "‚öôÔ∏è –°—á–∏—Ç–∞—é —è–¥—Ä–æ –ª–∏—á–Ω–æ—Å—Ç–∏‚Ä¶ ‚è≥ [‚ñà‚ñà‚ñà‚ñë‚ñë]",
    ],
    "ai": [
        "ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –ò–ò‚Ä¶",
        "ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –ò–ò‚Ä¶ ‚è≥ [‚ñë‚ñë‚ñë‚ñë‚ñë]",
        "ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –ò–ò‚Ä¶ ‚è≥ [‚ñà‚ñë‚ñë‚ñë‚ñë]",
        "ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –ò–ò‚Ä¶ ‚è≥ [‚ñà‚ñà‚ñë‚ñë‚ñë]",
        "ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –ò–ò‚Ä¶ ‚è≥ [‚ñà‚ñà‚ñà‚ñë‚ñë]",
    ],
    "pdf": ["üìù –§–æ—Ä–º–∏—Ä—É—é PDF-–æ—Ç—á—ë—Ç‚Ä¶"],
    "sending": ["üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç—á—ë—Ç‚Ä¶"],
}


async def action_typing(chat: Chat) -> None:
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä '–ø–µ—á–∞—Ç–∞–µ—Ç'."""
    try:
        await chat.send_action(ChatAction.TYPING)
    except Exception:
        pass


async def action_upload(chat: Chat) -> None:
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä '–∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞'."""
    try:
        await chat.send_action(ChatAction.UPLOAD_DOCUMENT)
    except Exception:
        pass


class Progress:
    """–û–±—ë—Ä—Ç–∫–∞ –Ω–∞–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å —É–¥–æ–±–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏."""

    def __init__(self, message: Message):
        self.message = message

    @classmethod
    async def start(cls, update: Update, initial_text: str) -> "Progress":
        """–°–æ–∑–¥–∞—Ç—å/–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –≤–µ—Ä–Ω—É—Ç—å –æ–±—ä–µ–∫—Ç Progress."""
        msg = await update.effective_message.reply_text(initial_text)
        return cls(msg)

    async def set(self, text: str) -> None:
        """–ó–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞."""
        try:
            await self.message.edit_text(text)
        except Exception:
            pass

    async def animate(self, frames: Iterable[str], delay: float = 0.6) -> None:
        """–ü—Ä–æ–∏–≥—Ä–∞—Ç—å –Ω–∞–±–æ—Ä –∫–∞–¥—Ä–æ–≤ (–ø—Å–µ–≤–¥–æ-–∞–Ω–∏–º–∞—Ü–∏—é) –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ."""
        for text in frames:
            await self.set(text)
            await asyncio.sleep(delay)

    async def finish(self, text: str = "‚úÖ –û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤!", delete_after: Optional[float] = 1.2) -> None:
        """–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å (–ø–æ –∂–µ–ª–∞–Ω–∏—é —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ)."""
        try:
            await self.message.edit_text(text)
            if delete_after:
                await asyncio.sleep(delete_after)
                await self.message.delete()
        except Exception:
            pass

    async def fail(self, text: str = "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.") -> None:
        """–ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —à–∞–≥ –Ω–µ —É–¥–∞–ª—Å—è (—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Å—Ç–∞—ë—Ç—Å—è)."""
        try:
            await self.message.edit_text(text)
        except Exception:
            pass
