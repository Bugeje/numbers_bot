from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler

from calc.cycles import (
    calculate_pinnacles_with_periods,
    generate_personal_year_table,
    split_years_by_pinnacles,
)
from output import generate_cycles_pdf
from interface import build_after_analysis_keyboard
from helpers import PRESETS, M, MessageManager, Progress, action_typing, action_upload, run_blocking


async def show_cycles_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        msg_manager = MessageManager(context)
        await msg_manager.cleanup_tracked_messages()
        
        name = context.user_data["name"]
        birthdate = context.user_data["birthdate"]
        life_path = context.user_data["core_profile"]["life_path"]

        # --- –ø—Ä–æ–≥—Ä–µ—Å—Å: —Ä–∞—Å—á—ë—Ç—ã ---
        await action_typing(update.effective_chat)
        progress = await Progress.start(update, "üîÑ –ì–æ—Ç–æ–≤–ª—é –∞–Ω–∞–ª–∏–∑ –ø–æ —Ü–∏–∫–ª–∞–º –∏ –≥–æ–¥–∞–º...")

        # –í—ã—á–∏—Å–ª–µ–Ω–∏—è
        personal_years = generate_personal_year_table(birthdate)
        pinnacles = calculate_pinnacles_with_periods(birthdate, life_path)
        personal_year_blocks = split_years_by_pinnacles(birthdate)

        # --- –ø—Ä–æ–≥—Ä–µ—Å—Å: PDF ---
        await progress.set(M.PROGRESS.PDF_ONE)
        await action_upload(update.effective_chat)

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF
        try:
            pdf_path = await run_blocking(
                generate_cycles_pdf, name, birthdate, personal_years, pinnacles, personal_year_blocks
            )

            await progress.set(M.PROGRESS.SENDING_ONE)
            await action_upload(update.effective_chat)

            with open(pdf_path, "rb") as f:
                await update.message.reply_document(
                    document=f, filename="–í–µ—Ä—à–∏–Ω—ã_–≥–æ–¥–∞.pdf", caption=M.CAPTION.CYCLES
                )

            await progress.finish()
        except Exception:
            await progress.fail(M.ERRORS.PDF_FAIL)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç—Ä–µ–∫–∞–µ–º)
        await msg_manager.send_and_track(
            update, M.HINTS.NEXT_STEP, reply_markup=build_after_analysis_keyboard()
        )

        return ConversationHandler.END

    except Exception as e:
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ü–∏–∫–ª–æ–≤.")
        raise e
